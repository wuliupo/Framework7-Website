extends ../_internal-template

block vars
  - var activeLink = 'docs';
  - var title = 'Form Storage | Framework7 Documentation';

block content
  .docs-demo-device
    iframe(width="320", height="548", frameborder="0", scrolling="on")
    .fade-overlay
  .docs-wrap
    .docs-nav
      include ../_docs-menu
    .docs-content.with-device
      .full-width
        h1 Form Storage
        p With form storage it is easy to store and parse forms data automatically, especially on Ajax loaded pages. And the most interesting part is that when you load this page again Framework7 will parse this data and fill up all form fields automatically! 


      h2(data-device-preview="../docs-demos/form-storage.html") Enable from storage
      p To enable form storage for specific form, all you need is:
      ul
        li add "store-data" class to form
        li add "id" attribute to from. It will not work if form doesn't have "id" attribute
        li make sure that all you inputs have "name" attributes, otherwise they will be ignored
      p 
        strong JavaScript is not required
      pre
        code
          | &lt;!-- Form has additional "store-data" class to enable form storage on this form --&gt;
          | &lt;form id="my-form" class="list-block store-data"&gt;
          |   &lt;ul&gt;
          |     &lt;li&gt;
          |       &lt;div class="item-content"&gt;
          |         &lt;div class="item-inner"&gt;
          |           &lt;div class="item-title label"&gt;Name&lt;/div&gt;
          |           &lt;div class="item-input"&gt;
          |             &lt;!-- Make sure that input have "name attrobute" --&gt;
          |             &lt;input type="text" name="name" placeholder="Your name"&gt;
          |           &lt;/div&gt;
          |         &lt;/div&gt;
          |       &lt;/div&gt;
          |     &lt;/li&gt;
          |     &lt;li&gt;
          |       &lt;div class="item-content"&gt;
          |         &lt;div class="item-inner"&gt;
          |           &lt;div class="item-title label"&gt;E-mail&lt;/div&gt;
          |           &lt;div class="item-input"&gt;
          |             &lt;!-- Make sure that input have "name attrobute" --&gt;
          |             &lt;input type="email" name="email" placeholder="E-mail"&gt;
          |           &lt;/div&gt;
          |         &lt;/div&gt;
          |       &lt;/div&gt;
          |     &lt;/li&gt;
          |     ... other form fields ...
          |   &lt;/ul&gt;
          | &lt;/form&gt;
      h2(data-device-preview="../docs-demos/form-storage-api.html") Form storage JavaScript API
      p So how this works. Everything is simple, actually Framework7 just calls <a href="form-data.html#form-to-json">formToJSON</a> on any input change and <a href="form-data.html#form-from-json">formFromJSON</a> on 'pageInit' event
      p All forms data stored in Local Storage and each form has its own Local Storage key which is named by the following rule: <code>localStorage.f7form-[formID]</code> where [formId] is related form's "id" attribute. Each such Local Storage key contains stringified JSON with form data.
      p So let's look at App's methods that could be helpful to manage these Local Storage keys with form data
      .method-wrap
        p
          span.method myApp.formGetData(<span>formId</span>) 
          span - get stored data for form with <b>formId</b> "id" attribute
        ul.method-parameters
          li
            span.parameter formId
            |  - <span class="parameter-type">string</span> - "id" attribute of required form. Required.
          li.method-returns Method returns JSON data
      .method-wrap
        p
          span.method myApp.formDeleteData(<span>formId</span>) 
          span - delete stored data for form with <b>formId</b> "id" attribute
        ul.method-parameters
          li
            span.parameter formId
            |  - <span class="parameter-type">string</span> - "id" attribute of required form. Required.
      .method-wrap
        p
          span.method myApp.formStoreData(<span>formId</span>, <span>formJSON</span>)
          span - store <b>formJSON</b> data for form with <b>formId</b> "id" attribute
        ul.method-parameters
          li
            span.parameter formId
            |  - <span class="parameter-type">string</span> - "id" attribute of required form. Required.
          li
            span.parameter formJSON
            |  - <span class="parameter-type">object</span> - JSON data to store
      pre
        code
          | &lt;form id="my-form2" class="list-block store-data"&gt;
          |   ... form fields ...
          | &lt;/form&gt;
          | &lt;div class="content-block"&gt;
          |   &lt;p&gt;&lt;a href="#" class="button get-storage-data"&gt;Get Data&lt;/a&gt;&lt;/p&gt;
          |   &lt;p&gt;&lt;a href="#" class="button delete-storage-data"&gt;Delete Data&lt;/a&gt;&lt;/p&gt;
          |   &lt;p&gt;&lt;a href="#" class="button save-storage-data"&gt;Save Data&lt;/a&gt;&lt;/p&gt;
          | &lt;/div&gt;
      pre
        code
          | var myApp = new Framework7();  
          | 
          | var $$ = Dom7;
          | 
          | $$('.get-storage-data').on('click', function() {
          |   var storedData = myApp.formGetData('my-form2');
          |   if(storedData) {
          |     alert(JSON.stringify(storedData));
          |   }
          |   else {
          |     alert('There is no stored data for this form yet. Try to change any field')
          |   }
          | });
          | 
          | $$('.delete-storage-data').on('click', function() {
          |   var storedData = myApp.formDeleteData('my-form2');
          |   alert('Form data deleted')
          | });
          | 
          | $$('.save-storage-data').on('click', function() {
          |   var storedData = myApp.formStoreData('my-form2', {
          |     'name': 'John',
          |     'email': 'john@doe.com',
          |     'gender': 'female',
          |     'switch': ['yes'],
          |     'slider': 10
          |   });
          |   alert('Form data replaced, refresh browser to see changes')
          | });
      .full-width.stop-scroll-device
        h2 Form storage JavaScript Events
        table.events-table
          thead
            tr
              th Event
              th Target
              th Description
          tbody
            tr
              td formFromJSON
              td Form element
              td Event will be triggered after <code>formFromJSON</code> method called on form to fill form fields
            tr
              td formToJSON
              td Form element
              td Event will be triggered after <code>formToJSON</code> method called on form to convert form fields to JSON
