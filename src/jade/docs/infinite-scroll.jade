extends ../_internal-template

block vars
  - var activeLink = 'docs';
  - var title = 'Infinite Scroll | Framework7 Documentation';

block content
  .docs-demo-device
    iframe(width="320", height="548", frameborder="0", scrolling="on")
    .fade-overlay
  .docs-wrap
    .docs-nav
      include ../_docs-menu
    .docs-content.with-device
      .full-width
        h1 Infinite Scroll
        p Infinite Scroll allows to load additional content or do any other required action when page scroll is near to the bottom.

        h2 Infinite Scroll Layout
        p All you need to make it work is to add additional "infinite-scroll" class to any scrollable container, particularly to our page scrolling area - <code>&lt;div class="page-content"&gt;</code>:
        pre
          code
            | &lt;div class="page"&gt;
            |     &lt;div class="page-content infinite-scroll" data-distance="100"&gt;
            |         ... 
            |     &lt;/div&gt;
            | &lt;/div&gt;
        p Where:
        ul
          li
            p <code>div class="page-content infinite-scroll"</code> our infinite scroll container
          li
            p <code>data-distance</code> attribute allows to configure distance from the bottom of page (in px) to trigger infinite scroll event. By default, if note specified, it is <b>50</b> (px)
        h2 Infinite Scroll On Top
        p If you need to use infinite scroll on top the page (when it scrolled to top), you need to add additional "infinite-scroll-top" class to "page-content":
        pre
          code
            | &lt;div class="page"&gt;
            |     &lt;div class="page-content infinite-scroll infinite-scroll-top"&gt;
            |         ... 
            |     &lt;/div&gt;
            | &lt;/div&gt;
        h2 Infinite Scroll Events
        table.events-table
          thead
            tr
              th Event
              th Target
              th Description
          tbody
            tr
              td infinite
              td Infinite Scroll container<span>&lt;div class="page-content infinite-scroll"&gt;</span>
              td Event will be triggered when page scroll reaches specified (in data-distance attribute) distance to the bottom.

        h2 Infinite Scroll API
        p There are two App's methods that can be used with infinite scroll container:
        .method-wrap
          p
            span.method myApp.attachInfiniteScroll(<span>container</span>) 
            span - add infinite scroll event listener to the specified HTML container
          ul.method-parameters
            li
              span.parameter parameters
              |  - <span class="parameter-type">HTMLElement</span> or <span class="parameter-type">string</span> (with CSS selector) - infinite scroll container. Required.
        .method-wrap
          p
            span.method myApp.detachInfiniteScroll(<span>container</span>) 
            span - remove infinite scroll event listener from the specified HTML container
          ul.method-parameters
            li
              span.parameter parameters
              |  - <span class="parameter-type">HTMLElement</span> or <span class="parameter-type">string</span> (with CSS selector) - infinite scroll container. Required.
        .important-note
          p Use myApp.attachInfiniteScroll method only if you detached infinite scroll events using myApp.detachInfiniteScroll because infinite scroll event listener will be attached automatically within 'pageInit'
      h2(data-device-preview="../docs-demos/infinite-scroll.html") Example
      pre
        code
          | &lt;div class="page-content infinite-scroll"&gt;
          |   &lt;div class="list-block"&gt;
          |     &lt;ul&gt;
          |       &lt;li class="item-content"&gt;
          |         &lt;div class="item-inner"&gt;
          |           &lt;div class="item-title"&gt;Item 1&lt;/div&gt;
          |         &lt;/div&gt;
          |       &lt;/li&gt;
          |       &lt;li class="item-content"&gt;
          |         &lt;div class="item-inner"&gt;
          |           &lt;div class="item-title"&gt;Item 2&lt;/div&gt;
          |         &lt;/div&gt;
          |       &lt;/li&gt;
          |       ...
          |       &lt;li class="item-content"&gt;
          |         &lt;div class="item-inner"&gt;
          |           &lt;div class="item-title"&gt;Item 20&lt;/div&gt;
          |         &lt;/div&gt;
          |       &lt;/li&gt;
          |     &lt;/ul&gt;
          |   &lt;/div&gt;
          |   &lt;!-- Preloader --&gt;
          |   &lt;div class="infinite-scroll-preloader"&gt;
          |     &lt;div class="preloader"&gt;&lt;/div&gt;
          |   &lt;/div&gt;
          | &lt;/div&gt; 
      pre
        code
          | .infinite-scroll-preloader {
          |   margin-top:-20px;
          |   margin-bottom: 10px;
          |   text-align: center;
          | }
          | .infinite-scroll-preloader .preloader {
          |   width:34px;
          |   height:34px;
          | }        
      pre
        code
          | var myApp = new Framework7(); 
          | 
          | var $$ = Dom7;
          | 
          | // Loading flag
          | var loading = false;
          | 
          | // Last loaded index
          | var lastIndex = $$('.list-block li').length;
          | 
          | // Max items to load
          | var maxItems = 60;
          | 
          | // Append items per load
          | var itemsPerLoad = 20;
          | 
          | // Attach 'infinite' event handler
          | $$('.infinite-scroll').on('infinite', function () {
          | 
          |   // Exit, if loading in progress
          |   if (loading) return;
          | 
          |   // Set loading flag
          |   loading = true;
          | 
          |   // Emulate 1s loading
          |   setTimeout(function () {
          |     // Reset loading flag
          |     loading = false;
          | 
          |     if (lastIndex &gt;= maxItems) {
          |       // Nothing more to load, detach infinite scroll events to prevent unnecessary loadings
          |       myApp.detachInfiniteScroll($$('.infinite-scroll'));
          |       // Remove preloader
          |       $$('.infinite-scroll-preloader').remove();
          |       return;
          |     }
          | 
          |     // Generate new items HTML
          |     var html = '';
          |     for (var i = lastIndex + 1; i &lt;= lastIndex + itemsPerLoad; i++) {
          |       html += '&lt;li class="item-content"&gt;&lt;div class="item-inner"&gt;&lt;div class="item-title"&gt;Item ' + i + '&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;';
          |     }
          | 
          |     // Append new items
          |     $$('.list-block ul').append(html);
          | 
          |     // Update last loaded index
          |     lastIndex = $$('.list-block li').length;
          |   }, 1000);
          | });          